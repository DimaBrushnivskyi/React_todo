{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","components/TodosFilter.jsx","components/TodoInput.jsx","components/TodoApp.jsx","App.jsx","index.js"],"names":["TodoItem","React","memo","todos","todo","setTodos","useState","toggle","setToggle","title","input","setInput","className","classNames","completed","editing","type","id","value","onChange","map","item","checked","onDoubleClick","onClick","filter","data-cy","onKeyUp","e","key","target","trim","length","onEditHandler","onBlur","onLeaveHandler","autoFocus","TodoList","TodosFilter","setFilter","selectedFilter","setSelectedFilter","clickHandler","filterValue","currentTarget","textContent","href","selected","TodoInput","onSubmit","preventDefault","Date","state","placeholder","TodoApp","isAllTodosSelected","setIsAllTodosSelected","filterType","filteredTodos","useMemo","useEffect","localStorage","getItem","setItem","JSON","stringify","parse","activeTodos","activeTodosLeft","completedTodos","prev","htmlFor","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f90be86.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const TodoItem = React.memo(({\n  todos,\n  todo,\n  setTodos,\n}) => {\n  const [toggle, setToggle] = useState(false);\n  const [input, setInput] = useState(todo.title);\n\n  const deleteHandler = () => {\n    setTodos(todos.filter(item => todo.id !== item.id));\n  };\n\n  const completeHandler = () => {\n    setTodos(todos.map((item) => {\n      if (item.id === todo.id) {\n        return {\n          ...item,\n          completed: !item.completed,\n        };\n      }\n\n      return item;\n    }));\n  };\n\n  const onEditHandler = (e) => {\n    if (e.key === 'Enter' && e.target.value.trim().length > 0) {\n      setInput(e.target.value);\n      setTodos(todos.map((item) => {\n        if (item.id === todo.id) {\n          return {\n            ...item,\n            title: e.target.value,\n          };\n        }\n\n        return item;\n      }));\n      setToggle(false);\n      setInput('');\n    }\n\n    if (e.key === 'Enter' && e.target.value.trim().length === 0) {\n      setTodos(todos.filter(item => item.id !== todo.id));\n    }\n\n    if (e.key === 'Escape') {\n      setToggle(false);\n    }\n  };\n\n  const onLeaveHandler = (e) => {\n    if (e.target.value.length > 0) {\n      setInput(e.target.value);\n      setTodos(todos.map((item) => {\n        if (item.id === todo.id) {\n          return {\n            ...item,\n            title: e.target.value,\n          };\n        }\n\n        return item;\n      }));\n      setToggle(false);\n      setInput('');\n    }\n\n    if (e.target.value.length === 0) {\n      setToggle(false);\n    }\n  };\n\n  return (\n    <li\n      className={classNames({\n        completed: todo.completed,\n        editing: toggle,\n      })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id=\"toggle-view\"\n          value={input}\n          onChange={completeHandler}\n          checked={todo.completed}\n        />\n        <label\n          onDoubleClick={() => setToggle(true)}\n        >\n          {todo.title}\n        </label>\n        <button\n          onClick={deleteHandler}\n          type=\"button\"\n          className=\"destroy\"\n          data-cy=\"deleteTodo\"\n        />\n      </div>\n      {toggle && (\n        <input\n          type=\"text\"\n          className=\"edit\"\n          id=\"editTodo\"\n          onKeyUp={e => onEditHandler(e)}\n          onBlur={e => onLeaveHandler(e)}\n          // eslint-disable-next-line jsx-a11y/no-autofocus\n          autoFocus={toggle}\n        />\n      )}\n    </li>\n  );\n});\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = React.memo(({\n  todos,\n  setTodos,\n}) => (\n  <ul className=\"todo-list\" data-cy=\"todosList\">\n    {todos.map(todo => (\n      <TodoItem\n        todo={todo}\n        key={todo.id}\n        setTodos={setTodos}\n        todos={todos}\n      />\n    ))}\n  </ul>\n));\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const TodosFilter = ({ todos, setFilter }) => {\n  const [selectedFilter, setSelectedFilter] = useState('');\n\n  const clickHandler = (value) => {\n    const filterValue = value.currentTarget.textContent;\n\n    setSelectedFilter(filterValue);\n    setFilter(filterValue);\n  };\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={classNames({\n            selected: selectedFilter === 'All',\n          })}\n          onClick={e => clickHandler(e)}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          onClick={e => clickHandler(e)}\n          className={classNames({\n            selected: selectedFilter === 'Active',\n          })}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={e => clickHandler(e)}\n          className={classNames({\n            selected: selectedFilter === 'Completed',\n          })}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\n\nexport const TodoInput = ({ setTodos }) => {\n  const [input, setInput] = useState('');\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (!input) {\n      return;\n    }\n\n    const id = +new Date();\n    const todo = {\n      id,\n      title: input,\n      completed: false,\n    };\n\n    setTodos(state => [...state, todo]);\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"Stuff which needs to be done\"\n        data-cy=\"createTodo\"\n        value={input}\n        onChange={e => setInput(e.target.value)}\n      />\n    </form>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { TodoList } from './TodoList';\nimport { TodosFilter } from './TodosFilter';\nimport { TodoInput } from './TodoInput';\n\nexport const TodoApp = React.memo(() => {\n  const [todos, setTodos] = useState([]);\n  const [isAllTodosSelected, setIsAllTodosSelected] = useState(true);\n  const [filter, setFilter] = useState('All');\n\n  const filterType = {\n    Completed: 'Completed',\n    Active: 'Active',\n  };\n\n  const filteredTodos = useMemo(() => {\n    switch (filter) {\n      case filterType.Completed:\n        return todos.filter(todo => todo.completed);\n\n      case filterType.Active:\n        return todos.filter(todo => !todo.completed);\n\n      default:\n        return todos;\n    }\n  }, [filter, todos]);\n\n  const allCompletedHandler = () => {\n    setIsAllTodosSelected(prev => !prev);\n    setTodos(todos.map(todo => ({\n      ...todo,\n      completed: isAllTodosSelected,\n    })));\n  };\n\n  const removeCompletedTodosHandler = () => {\n    setTodos(todos.filter(todo => !todo.completed));\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos, filter]);\n\n  const activeTodos = [...filteredTodos]\n    .filter(todo => !todo.completed).length;\n\n  const activeTodosLeft = `${activeTodos} items left`;\n\n  const completedTodos = [...filteredTodos]\n    .filter(todo => todo.completed);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>React Todo</h1>\n        <TodoInput setTodos={setTodos} />\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          data-cy=\"toggleAll\"\n          onChange={allCompletedHandler}\n          checked={completedTodos.length > 0}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodoList\n          todos={filteredTodos}\n          setTodos={setTodos}\n        />\n      </section>\n\n      {todos.length > 0 && (\n        <footer className=\"footer\">\n          <span className=\"todo-count\" data-cy=\"todosCounter\">\n            {activeTodosLeft}\n          </span>\n\n          <TodosFilter\n            todos={filteredTodos}\n            setFilter={setFilter}\n          />\n\n          {completedTodos.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={removeCompletedTodosHandler}\n            >\n              Clear completed\n            </button>\n          )}\n        </footer>\n      )}\n    </section>\n  );\n});\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}